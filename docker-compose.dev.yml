services:
  # MongoDB Database
  mongo:
    image: mongo:7-jammy
    container_name: cosmetic-shop-mongo-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: cosmetic-shop
    volumes:
      - mongo_data_dev:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - cosmetic-shop-network

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: cosmetic-shop-backend-dev
    restart: unless-stopped
    ports:
      - "5001:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
    env_file:
      - ./backend/.env
    depends_on:
      - mongo
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - cosmetic-shop-network
    command: npm run dev

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: cosmetic-shop-frontend
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:5001
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - cosmetic-shop-network

volumes:
  mongo_data_dev:
    driver: local

networks:
  cosmetic-shop-network:
    driver: bridge
